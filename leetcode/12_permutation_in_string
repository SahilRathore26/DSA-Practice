class Solution
{
public:
  bool isFreqSame(int freq1[], int freq2[])
  {
    for (int i = 0; i < 26; i++)
    {
      if (freq1[i] != freq2[i])
      {
        return false;
      }
    }
    return true;
  }

  bool checkInclusion(string s1, string s2)
  {
    int n = s1.size(), m = s2.size();
    int freq[26] = {0};
    for (int i = 0; i < n; i++)
    {
      freq[s1[i] - 'a']++;
    }
    int winSize = n;
    for (int i = 0; i < m; i++)
    {
      int winIdx = 0, idx = i;
      int winFreq[26] = {0};
      while (winIdx < winSize && idx < m)
      {
        winFreq[s2[idx] - 'a']++;
        winIdx++, idx++;
      }

      if (isFreqSame(freq, winFreq))
      {
        return true;
      }
    }
    return false;
  }
};